[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "ipykernel"
authors = [{name = "IPython Development Team", email = "ipython-dev@scipy.org"}]
license = {file = "COPYING.md"}
keywords = ["Interactive", "Interpreter", "Shell", "Web"]
readme = "README.md"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
urls = {Homepage = "https://ipython.org"}
requires-python = ">=3.7"
dependencies = [
    "debugpy>=1.0",
    "ipython>=7.23.1",
    "traitlets>=5.1.0",
    "jupyter_client>=6.1.12",
    "tornado>=6.1",
    "matplotlib-inline>=0.1",
    'appnope;platform_system=="Darwin"',
    "psutil",
    "nest_asyncio",
    "packaging",
]
dynamic = ["description", "version"]

[project.optional-dependencies]
test = [
    "pytest>=6.0",
    "pytest-cov",
    "flaky",
    "ipyparallel",
    "pre-commit",
    "pytest-timeout",
]

[tool.jupyter-releaser]
skip = ["check-links"]

[tool.jupyter-releaser.hooks]
after-git-prep = ["python", "create_data_files.py", "--dist"]

[tool.tbump.version]
current = "6.13.0"
regex = '''
  (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)
  ((?P<channel>a|b|rc|.dev)(?P<release>\d+))?
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "ipykernel/_version.py"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules --ignore=ipykernel/pylab/backend_inline.py --ignore=ipykernel/pylab/config.py --ignore=ipykernel/gui/gtk3embed.py --ignore=ipykernel/gui/gtkembed.py --ignore=ipykernel/datapub.py --ignore=ipykernel/log.py --ignore=ipykernel/pickleutil.py --ignore=ipykernel/serialize.py --ignore=ipykernel/_eventloop_macos.py"
testpaths = [
    "ipykernel/tests",
    "ipykernel/inprocess/tests"
]
timeout = 300
# Restore this setting to debug failures
# timeout_method = "thread"
filterwarnings= [
  # Fail on warnings
  "error",

  # Ignore our own warnings
  "ignore:The `stream` parameter of `getpass.getpass` will have no effect:UserWarning",

  # Ignore jupyter_client warnings
  "ignore:unclosed <socket.socket:ResourceWarning",
  "ignore:unclosed event loop:ResourceWarning",
  "ignore:There is no current event loop:DeprecationWarning"
]
